#!/bin/sh -e
#
# rc.local
#
# This script is executed at the end of each multiuser runlevel.
# Make sure that the script will "exit 0" on success or any other
# value on error.
#
# In order to enable or disable this script just change the execution
# bits.
#
# By default this script does nothing.

 sysctl -w kernel.watchdog=0
 sysctl -w kernel.watchdog_thresh=0
 sysctl -w kernel.ftrace_enabled=0
#sysctl -w kernel.kexec_load_disabled=1
#sysctl -w kernel.modules_disabled=1
 sysctl -w kernel.sched_autogroup_enabled=0
#sysctl -w kernel.sched_rt_period_us=1000000
#sysctl -w kernel.sched_rt_runtime_us=857422
#sysctl -w kernel.sched_min_granularity_ns=230007
#echo 230011  | tee /sys/kernel/debug/sched/min_granularity_ns
#sysctl -w kernel.sched_wakeup_granularity_ns=388328
#echo 388332  | tee /sys/kernel/debug/sched/wakeup_granularity_ns
#sysctl -w kernel.sched_latency_ns=1394096
#echo 1394102 | tee /sys/kernel/debug/sched/latency_ns
#sysctl -w kernel.sched_cfs_bandwidth_slice_us=1
#sysctl -w kernel.sched_migration_cost_ns=4899037
 echo 4899051 | tee /sys/kernel/debug/sched/migration_cost_ns
#sysctl -w kernel.sched_nr_migrate=0
#echo 25      | tee /sys/kernel/debug/sched/nr_migrate
#sysctl -w kernel.sched_rr_timeslice_ms=32
#sysctl -w kernel.sched_shares_window_ns=345997
#sysctl -w kernel.sched_tunable_scaling=1
#echo 0 | tee /sys/kernel/debug/sched/tunable_scaling
#sysctl -w kernel.sched_time_avg_ms=6288
 sysctl -w kernel.printk="0 0 0 0"

 sysctl -w kernel.apparmor_restrict_unprivileged_userns=0

#sysctl -w vm.dirty_background_ratio=0
#sysctl -w vm.dirty_ratio=0
 sysctl -w vm.dirty_writeback_centisecs=0
 sysctl -w vm.max_map_count=672161
 sysctl -w vm.memory_failure_recovery=0
 sysctl -w vm.oom_dump_tasks=0
 sysctl -w vm.oom_kill_allocating_task=1
 sysctl -w vm.overcommit_memory=1
#sysctl -w vm.page-cluster=0
 sysctl -w vm.panic_on_oom=2
 sysctl -w vm.stat_interval=0
 sysctl -w vm.swappiness=0
 sysctl -w vm.vfs_cache_pressure=0

#sysctl -w net.core.rmem_default=211000
#sysctl -w net.core.rmem_max=211000
#sysctl -w net.core.wmem_max=211000
#sysctl -w net.core.wmem_default=211000
#sysctl -w net.ipv4.conf.default.forwarding=1
 sysctl -w net.ipv4.tcp_rmem='4637 88319 3345789'
 sysctl -w net.ipv4.tcp_wmem='4589 89970 3455761'
 sysctl -w net.ipv4.tcp_timestamps=0
 sysctl -w net.ipv4.tcp_window_scaling=0
 sysctl -w net.ipv4.tcp_sack=0
 sysctl -w net.ipv4.tcp_no_metrics_save=1
 sysctl -w net.ipv4.tcp_moderate_rcvbuf=0
#sysctl -w net.ipv4.udp_mem='46424 57912 87618'
#sysctl -w net.ipv4.conf.wlp2s0.promote_secondaries=0
#sysctl -w net.core.netdev_max_backlog=5000
 sysctl -w net.ipv6.conf.all.disable_ipv6=1

#ifconfig enp3s0 txqueuelen 1875
#ifconfig wlp2s0 txqueuelen 1875

echo 0 | tee /sys/module/snd*/parameters/power_save*  || true
#echo 1 | tee /sys/module/snd*/parameters/pm_blacklist || true

#echo hpet > /sys/devices/system/clocksource/clocksource0/current_clocksource || true
echo 4032 > /sys/class/rtc/rtc0/max_user_freq || true
#sysctl -w dev.rtc.max-user-freq=4032 || true
sysctl -w dev.hpet.max-user-freq=2147483584 || true

#echo 55696 | tee /sys/devices/system/cpu/cpufreq/ondemand/sampling_rate || true
#echo 1 > /sys/devices/system/cpu/cpufreq/ondemand/ignore_nice_load || true
#echo 100 > /sys/devices/system/cpu/cpufreq/ondemand/sampling_down_factor || true
#[ -e /sys/fs/cgroup/cpuset/cpuset.sched_load_balance ] && echo 0 > /sys/fs/cgroup/cpuset/cpuset.sched_load_balance || true
#echo 1 > /sys/fs/cgroup/cpuset/cpuset.mem_hardwall || true

echo "$(ifconfig -a | grep -o ^[a-z0-9]* | grep -v lo)" | while read dev ; do
 tc qdisc add dev $dev root pfifo_fast || true
#tc qdisc add dev $dev ingress
#tc -s -d qdisc show dev $dev
done

for i in $(ls /sys/block/*/queue/scheduler); do
 if   echo $(cat $i) | grep -q none; then
  echo none > $i
 elif echo $(cat $i) | grep -q noop; then
  echo noop > $i
 fi
done

for i in $(ls /proc/sys/net/ipv4/conf/*/promote_secondaries); do
 echo 0 > $i
done

swapoff -a

#cp /etc/libasound.so.2.0.0.sav /dev/shm/libasound.so.2
#cp /etc/libasound.so.2.0.0_1.2.3.1.dev.shm /dev/shm/libasound.so.2
 cp /etc/libasound.so.2.0.0_1.2.10 /dev/shm/libasound.so.2
#ln -sf /etc/libasound.so.2.0.0.sav /usr/lib/x86_64-linux-gnu/libasound.so
 cp /usr/share/alsa/alsa.conf.min /dev/shm/alsa.conf
#ln -sf /dev/shm/alsa.conf /usr/share/alsa/alsa.conf
 cp /usr/bin/upmpdcli /etc/upmpdcli.conf /usr/bin/mpv /home/parkmino/.config/mpv/mpv.conf /dev/shm/
 mkdir /dev/shm/scripts && cp /home/parkmino/.config/mpv/scripts/ytdl_hook.lua /dev/shm/scripts || true
 cp /usr/local/bin/mpd /dev/shm/ && cp /etc/mpd.conf.sav /dev/shm/mpd.conf
#cp /usr/bin/mpd.0.23.12 /dev/shm/mpd && cp /etc/mpd.conf.resampler /dev/shm/mpd.conf
#cp /etc/libaudiofile.so.1.0.0.sav /dev/shm/libaudiofile.so.1
#ln -sf /etc/libaudiofile.so.1.0.0.sav /usr/lib/x86_64-linux-gnu/libaudiofile.so
#cp /etc/libFLAC.so.8.3.0.sav /dev/shm/libFLAC.so.8
#ln -sf /etc/libFLAC.so.8.3.0.sav /usr/lib/x86_64-linux-gnu/libFLAC.so
#cp -r /home/parkmino/Downloads/aplayer/aprenderer /dev/shm/

#for pid in $(ps -eo pid,class,ni,comm | grep -i TS | awk '$3 < -2 && $4 !~ /mpd/ {print $1}'); do
# renice  -2 $pid || true
#done
#
#for pid in $(ps -eo pid,class,comm | grep -E '(FF|RR)' | awk '$3 !~ /migration|mpd/ {print $1}'); do
# chrt -op 0 $pid || true
# renice  -3 $pid || true
#done

#procnr=$(nproc --all)
#if   [ "$procnr" -eq 2 ]; then
# m_task=0; s_task=1; h_task=1; o_task=1
#elif [ "$procnr" -eq 4 ]; then
# m_task=2; s_task=0; h_task=3; o_task=1,3
#elif [ "$procnr" -ge 8 ]; then
# m_task=6; s_task=4; h_task=2; o_task=1,3,5,7
#else
# m_task=0; s_task=0; h_task=0; o_task=0
#fi
#
#if [ "$m_task" -ge 1 ];then
# #for pid in $(ps -eo pid,comm | awk '$2 !~ /systemd$|lightdm|sawfish|mpd/ {print $1}'); do
# # taskset -acp $s_task,$h_task,$o_task $pid 2>/dev/null || true
# #done
#
# until $(grep -q snd /proc/interrupts); do
#  sleep 1
# done
#
# sleep 1
#
# for i in $(awk '/snd/{print +$1}' /proc/interrupts); do
#  proc="/proc/irq/$i/smp_affinity"
#  echo $(echo "2^$m_task" | bc) > $proc || true
#  echo "$proc = $(cat $proc) ($(awk '$1 ~ /'"$i"'/{print $NF}' /proc/interrupts))"
# done
# for i in $(awk '/enp3s0|1f.2/{print +$1}' /proc/interrupts); do
#  proc="/proc/irq/$i/smp_affinity"
#  echo $(echo "2^$s_task" | bc) > $proc || true
#  echo "$proc = $(cat $proc) ($(awk '$1 ~ /'"$i"'/{print $NF}' /proc/interrupts))"
# done
# for i in $(awk '/i915/{print +$1}' /proc/interrupts); do
#  proc="/proc/irq/$i/smp_affinity"
#  sh -c "echo a > $proc" || true
#  echo "$proc = $(cat $proc) ($(awk '$1 ~ /'"$i"'/{print $NF}' /proc/interrupts))"
# done
## for i in $(awk '/mei|nvkm|i915|iwlwifi|xhci/{print +$1}' /proc/interrupts); do
##  proc="/proc/irq/$i/smp_affinity"
##  echo $(echo "2^$m_task-1" | bc) > $proc || true
##  echo "$proc = $(cat $proc) ($(awk '$1 ~ /'"$i"'/{print $NF}' /proc/interrupts))"
## done
# echo $(echo "2^$s_task" | bc) > /proc/irq/default_smp_affinity
#fi

hdparm -A1 -a2048 -B255 /dev/sda # -M0

for i in $(ls /dev/snd/); do
 [ ! "$i" = "pcmC0D0p"  ] && [ ! "$i" = "controlC0"  ] && [ ! "$i" = "pcmC1D0p"  ] && [ ! "$i" = "controlC1"  ] && rm -rf "/dev/snd/$i" || true
#[ ! "$i" = "pcmC0D0p"  ] && [ ! "$i" = "controlC0"  ] && [ ! "$i" = "pcmC1D0p"  ] && [ ! "$i" = "controlC1"  ] && [ "$i" = "pcmC0D3p" ] && rm -rf "/dev/snd/$i" || true
done

#for i in dbus-daemon nimf polkitd systemd-journal systemd-logind systemd-udevd udisksd; do
# if [ "$procnr" -ge 2 ] && pidof -q $i; then
#  for j in $(pidof $i); do
#   sudo taskset -acp $s_task,$h_task,$o_task $j || true
#  done
# fi
#done

ps -ef | grep [d]efunct | awk '{print $3}' | xargs -r kill -9

modprobe -r psmouse

#uhubctl -a 0 -l 2-1 -p 1-6 || true
#uhubctl -a 0 -l 1-1 -p 1-6 || true

pgrep -x kime > /dev/null && pkill kime

exit 0
