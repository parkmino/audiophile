UPnP/DLNA Audio Render for Raspberry Pi

0. Flashing

	https://www.raspberrypi.com/software/operating-systems/
	https://downloads.raspberrypi.org/raspios_armhf/images/

	$ sudo fdisk -l
	$ sudo umount /dev/sdc?
	$ sudo dd status=progress bs=4M if=$(ls ~/Downloads/raspi/*raspios*.img | tail -1) of=/dev/sdc
	$#sudo dd status=progress bs=4M if=~/Downloads/raspi/DietPi*.img of=/dev/sdc
	$ sync
	  raspberrypi login : pi
	  password : raspberry
	$ sudo raspi-config
		3 Interface Options > P2 SSH

	$ sudo rpi-imager # Ctrl+Shift+X

	$ export ip="192.168.x.x"
	$ ssh-keygen -f "/home/parkmino/.ssh/known_hosts" -R $ip
	$ ssh pi@$ip
	  password: raspberry

1. Update & upgrade

	$ sudo apt-get update
	$ apt-key list
	$ apt-key export 90FDDD2E | sudo gpg --dearmour -o /etc/apt/trusted.gpg.d/raspbian-dists-bookworm.gpg
	$ sudo apt-get update
	$ sudo apt-get upgrade
	$ sudo apt-get dist-upgrade
	$ sudo apt-get autoremove
	$ sudo apt-get clean

	$ sudo apt-get install bc ntpdate python3-pycryptodome uhubctl
	$ mkdir ~/copy

	$#scp rc.local alsa.conf.{min,mix,plug} libasound.so.2.0.0.{min,mix} libaudiofile.so.1.0.0 libFLAC.so.8.3.0 mpd mpd.conf kr2mpd sbs_dec.py ut2mpd tts2mpd *.pls *.m3u icon.png llctl spotifyd.conf audio.conf audio-config audioconf roonup pi@$ip:/home/pi/copy/
	$ scp -r /home/parkmino/Downloads/raspi/copy/* pi@$ip:/home/pi/copy/

2. Configuration file

	$ sudo nano /boot/firmware/config.txt
		#dtparam=audio=on
		dtoverlay=vc4-fkms-v3d,noaudio
		#max_framebuffers=2

		[pi3+]
		dtparam=eth_led0=4
		dtparam=eth_led1=4

		[pi4]
		dtparam=eth_led0=14
		dtparam=eth_led1=14

		[all]
		gpu_mem=16
		disable_splash=1
		dtoverlay=disable-bt

	$ cat /proc/cpuinfo
	$ cat /sys/devices/system/cpu/cpu0/cpufreq/scaling_cur_freq

3. Kernel option

	$ sudo nano /boot/cmdline.txt
		root=/dev/mmcblk0p2
		#console=serial0,115200
		#console=tty1
		elevator=noop
		consoleblank=0 smsc95xx.turbo_mode=0 selinux=0

4. Localisation

	$ sudo dpkg-reconfigure locales
	$ sudo dpkg-reconfigure tzdata

	$ locale
	$ locale -a
	$ locale -a -v
	$#ls -al /var/lib/locales/supported.d/
	$#sudo nano /var/lib/locales/supported.d/en
		en_US UTF-8
	$#sudo rm -rfv /usr/lib/locale/*
	$#sudo locale-gen
	$#locale -a -v

5. Disable modules

	$ lsmod | sort
	$ sudo nano /etc/modprobe.d/raspi-blacklist.conf
		#blacklist 8021q
		blacklist bcm2835_codec
		blacklist bcm2835_isp
		blacklist bcm2835_v4l2
		blacklist brcmfmac
		blacklist ip_tables
		blacklist raspberrypi_hwmon
		blacklist snd_bcm2835
		blacklist uio
		blacklist uio-pdrv-genirq
		blacklist vc_sm_cma
		blacklist x_tables
		#blacklist bcm2835_gpiomem
		#blacklist cfg80211
		#blacklist fixed
		#blacklist ip_tables
		###Disable RPi3 Wi-Fi
		#blacklist brcmfmac
		###Disable RPi3 Bluetooth
		#blacklist btbcm
		#blacklist hci_uart

6. Disable services

	$ systemctl list-unit-files -t service | awk '$2~/enabled/'
	$ sudo systemctl disable cron triggerhappy avahi-daemon hciuart bluetooth bthelper@hci0 ModemManager # getty@tty1 rng-tools systemd-resolved resolvconf dbus.service dbus.socket rsyslog systemd-timesyncd
	$ sudo systemctl mask systemd-journald.service systemd-journald.socket systemd-journald-audit.socket systemd-journald-dev-log.socket systemd-journal-flush systemd-logind # systemd-journald-audit.service

	$ sudo nano /etc/network/interfaces
		auto lo
		iface lo inet loopback

		auto eth0
		iface eth0 inet dhcp

		#auto wlan0
		#iface wlan0 inet dhcp
	$ sudo apt-get remove network-manager
	$ sudo apt-get autoremove

	$ sync
	$ sudo reboot
	$ ssh pi@$ip
	$ lsmod | sort
	$ pstree

7. MPD

	$ sudo apt-get install libcue2 libaudiofile1 libavformat59 libflac12 libid3tag0 libmpdclient2 libupnp13 # libcurl3-gnutls
	$ sudo mkdir -p /var/lib/mpd/music /var/lib/mpd/playlists /var/run/mpd
	$ sudo mv copy/mpd /usr/bin/
	$ sudo mv copy/mpd.conf /etc/mpd.conf.sav
	$ sudo mpd /etc/mpd.conf.sav
	
	$ sudo apt-get install mpc ncmpc
	$ sudo mkdir /etc/ncmpc
	$ sudo mv copy/ncmpc_config /etc/ncmpc/config

	$#sudo mkdir /var/lib/mpd/music/do_not_remove
	$#sudo mv copy/blank.mp3 /var/lib/mpd/music/do_not_remove
	$ sudo mv copy/musicpd.service /usr/lib/systemd/system/
	$#sudo mv copy/musicpd /usr/bin/
	$ sudo cp /usr/bin/mpd /dev/shm/ && sudo cp /etc/mpd.conf.sav /dev/shm/mpd.conf
	$ sudo systemctl start musicpd
	$ chrt -aop $(pidof mpd)

8. Internet Radio & TTS (Text to Speech)

	$#sudo curl -L https://yt-dl.org/downloads/latest/youtube-dl -o /usr/local/bin/youtube-dl
	$#sudo chmod 755 /usr/local/bin/youtube-dl
	$ sudo curl -L https://github.com/yt-dlp/yt-dlp/releases/latest/download/yt-dlp -o /usr/local/bin/yt-dlp
	$ sudo chmod a+rx /usr/local/bin/yt-dlp
	$ sudo mv copy/{kr2mpd,sbs_dec.py,ut2mpd,tts2mpd} /usr/bin/
	$ sudo mv copy/internet\ radio.m3u /var/lib/mpd/playlists/
	$ sudo mkdir /var/lib/mpd/music/webradio
	$ sudo mv copy/*.pls /var/lib/mpd/music/webradio
	$ mpc update

9. Upmpdcli

	$#sudo apt-get install libmpdclient2 libexpat1 libcurl4 python3 python3-requests
	$ sudo apt-get install libjsoncpp25 libmicrohttpd12
	$ sudo dpkg -i copy/upmpdcli/lib*upnp*.deb copy/upmpdcli/upmpdcli_*.deb
	$ sudo mv copy/icon.png /usr/share/upmpdcli/
	$ sudo sed -i '/checkcontentformat =/s/^#//; /checkcontentformat =/s/= .*/= 0/' /etc/upmpdcli.conf
	$#sudo sed -i '/radiolist/s/^/#/' /etc/upmpdcli.conf
	$#sudo sed -i '/tidalaudioquality =/s/^#//; /tidalaudioquality =/s/= .*/= LOSSLESS/' /etc/upmpdcli.conf
	$ grep -e checkcontentformat -e tidalaudioquality -e radiolist /etc/upmpdcli.conf
		checkcontentformat = 0
		#radiolist = /usr/share/upmpdcli/radio_scripts/radiolist.conf
		tidalaudioquality = LOSSLESS
	$ sudo systemctl disable upmpdcli.service
	$ sudo nano /etc/upmpdcli.conf
	  ...

10. Roon Bridge

	https://kb.roonlabs.com/LinuxInstall

	$ sudo apt update

	$ curl -O https://download.roonlabs.net/builds/roonbridge-installer-linuxarmv7hf.sh
	$ chmod +x roonbridge-installer-linuxarmv7hf.sh
	$ sudo ./roonbridge-installer-linuxarmv7hf.sh

	$ cat /opt/RoonBridge/VERSION
		100801125
		1.8 (build 1125) stable
		stable
	$ sudo nano /etc/systemd/system/roonbridge.service
		#ExecStart=/opt/RoonBridge/start.sh
		ExecStart=/opt/RoonBridge/Bridge/RoonBridge
	$ sudo nano /opt/RoonBridge/Bridge/RoonBridge
		#exec /bin/bash -c "exec -a $SCRIPT \"$MONO_DIR/bin/mono-sgen\" --debug --gc=sgen --server $SCRIPT.exe $@"
		exec /bin/bash -c "exec -a $SCRIPT \"$MONO_DIR/bin/mono-sgen\" --gc=sgen --server $SCRIPT.exe $@"
		#exec "$MONO_DIR/bin/mono-sgen" --debug --gc=sgen --server $SCRIPT.exe "$@"
		exec "$MONO_DIR/bin/mono-sgen" --gc=sgen --server $SCRIPT.exe "$@"
	$ sudo cp /etc/systemd/system/roonbridge.service /etc/systemd/system/roonbridgetoram.service
	$ sudo sed -i 's/\/opt\//\/dev\/shm\//' /etc/systemd/system/roonbridgetoram.service
	$ sudo systemctl daemon-reload
	$ sudo systemctl stop roonbridge roonbridgetoram
	$ sudo systemctl disable roonbridge roonbridgetoram

	$ file /opt/RoonBridge/Bridge/processreaper
	$ ls -al /opt/RoonBridge/Bridge/processreaper
	$ sudo strip --strip-debug /opt/RoonBridge/Bridge/processreaper
	$ ls -al /opt/RoonBridge/Bridge/processreaper

	$ find /opt/RoonBridge/ -name *.so -exec ls -al {} \;
	$ find /opt/RoonBridge/ -name *.so -exec sudo chmod -x {} \; -exec sudo strip --strip-debug {} \;
	$ find /opt/RoonBridge/ -name *.so -exec ls -al {} \;

	$ rm roonbridge-installer*
	$ sudo mv copy/roonup /usr/bin/

11. Librespot

	https://github.com/librespot-org/librespot

	$ sudo apt-get install build-essential libasound2-dev file cargo
	$ sudo ntpdate pool.ntp.org
	$ wget https://github.com/librespot-org/librespot/archive/refs/tags/v0.4.2.tar.gz
	$ tar xvzf v0.4.2.tar.gz && rm v0.4.2.tar.gz
	$ cd librespot-0.4.2
	$ cargo build --release --no-default-features --features alsa-backend

	$ target/release/librespot -n Librespot --backend ?
	$ ls -al target/release/librespot
	$ file target/release/librespot
	$ strip --strip-debug target/release/librespot
	$ ls -al target/release/librespot
	$ cp target/release/librespot /home/pi/
	
	$ mv copy/librespot ./

12. Spotifyd (Not in use)

	https://github.com/Spotifyd/spotifyd
	https://github.com/Spotifyd/spotifyd/releases/latest

	$ curl -s $(curl -s https://github.com/Spotifyd/spotifyd/releases/latest | cut -d\" -f2) | grep -m1 armv6.*tar.gz | cut -d\" -f2 | wget "https://github.com/$(cat -)"
	$ unzip spotifyd-*.zip -d ~/ && rm spotifyd-*.zip
	$ nano -L ~/spotifyd.conf

	[global]
	username = USER
	password = PASS
	backend = alsa
	device = pcm.0
	mixer = ctl.9
	device_name = Spotifyd
	bitrate = 320    

13. AirConnect

	https://github.com/philippe44/AirConnect

	$ mv copy/airupnp-arm-static ./

14. Shairport-sync (Not in use)

	$ sudo apt-get update
	$ sudo apt-get install shairport-sync
	$ wget http://archive.raspbian.org/raspbian/pool/main/s/shairport-sync/shairport-sync_3.2.2-1+b2_armhf.deb
	$ sudo dpkg -i shairport*.deb

	# nano /DietPi/dietpi/dietpi-software
		aSOFTWARE_WHIP_NAME[$software_id]='Shairport Sync'
		...
		aSOFTWARE_REQUIRES_ALSA[$software_id]=0
	# dietpi-software
		Software Optimized >> Media Systems >> 37 Shairport Sync
	# systemctl unmask  udev
	# systemctl disable avahi-daemon shairport-sync

	$ sudo sed -i '/_device =/s/^\/*//; /output_device =/s/".*";/"pcm.0";/; /mixer_device =/s/".*";/"ctl.9";/' /etc/shairport-sync.conf
	$ #sudo sed -i '/_format =/s/^\/*//; /output_format =/s/".*";/"S24";/' /etc/shairport-sync.conf   # 24Bit Only
	$ sudo sed -i '/interpolation =/s/^\/*//; /interpolation =/s/".*";/"soxr";/' /etc/shairport-sync.conf
	$ sudo sed -i '/convolution =\|loudness =/s/^\/*//; /convolution =\|loudness =/s/".*"/"no"/' /etc/shairport-sync.conf
	$ sudo systemctl stop    avahi-daemon shairport-sync
	$ sudo systemctl disable avahi-daemon shairport-sync

15. HQPlayer NAA
	$ wget --no-check-certificate https://www.signalyst.eu/bins/naa/linux/bookworm/networkaudiod_4.5.0-57_armhf.deb
	$ sudo dpkg -i networkaudiod*.deb
	$ sudo systemctl disable networkaudiod
	$ sudo cp /lib/systemd/system/networkaudiod.service /lib/systemd/system/networkaudiodtoram.service
	$ sudo nano /lib/systemd/system/networkaudiodtoram.service
		ExecStart=/dev/shm/networkaudiod
	$ sudo systemctl daemon-reload
	$ ps ax | grep networkaudiod
	$ sudo systemctl start networkaudiod
	$ ps ax | grep networkaudiod
	$ sudo systemctl stop  networkaudiod
	$ ps ax | grep networkaudiod
	$ sudo cp /usr/sbin/networkaudiod /dev/shm/
	$ sudo systemctl start networkaudiodtoram
	$ ps ax | grep networkaudiod
	$ sudo systemctl stop  networkaudiodtoram
	$ ps ax | grep networkaudiod
	$#consf naa

16. Squeezelite
	$ mv copy/squeezelite ./
	$#sudo apt-get install squeezelite
	$#sudo sed -i '/SL_SOUNDCARD/s/^#*//; /SL_SOUNDCARD/s/".*"/"pcm.hw"/' /etc/default/squeezelite

17. myMPD

	$ sudo apt-get install gcc cmake perl libssl-dev libid3tag0-dev libflac-dev # liblua5.3-dev
	$ curl -s https://github.com/jcorporation/myMPD/releases/latest | cut -d\" -f2 | sed 's/releases\/tag/archive/; s/$/.zip/' | wget --no-check-certificate "$(cat -)" -O ./mympd.zip
	$ unzip mympd.zip -d ~/ && rm mympd.zip
	$ cd myMPD*
	$ ./build.sh release
	$ sudo ./build.sh install
	$ ./build.sh pkgdebian

	$ sudo apt-get install lrzsz liblua5.4-0 # libc6 libid3tag0 libflac12 libmediainfo0v5 openssl

	$ curl -s https://download.opensuse.org/repositories/home:/jcorporation/Raspbian_10/armhf/ | grep -o 'mympd_[0-9.-]*_armhf.deb' | head -1 | wget "https://download.opensuse.org/repositories/home:/jcorporation/Raspbian_10/armhf/$(cat -)"
	$ sudo dpkg -i mympd*.deb
	
	$ sudo dpkg -i copy/mympd*.deb
	$ sudo groupadd -r mympd
	$ sudo useradd -r -g mympd -s /bin/false -d /var/lib/mympd mympd
	$ sudo mympd
	$ sudo mv copy/*.png /var/lib/mympd/pics/thumbs/
	$ sudo mv copy/*.lua /var/lib/mympd/scripts/
	$#sudo chown -R mympd:mympd /var/lib/mympd

	$ sudo sh -c "echo 'mympd ALL=(ALL) NOPASSWD:ALL' >> /etc/sudoers"
	$#echo "base, string, utf8, table, math, mympd, io" | sudo tee /var/lib/mympd/config/lualibs
	$ echo "false" | sudo tee /var/lib/mympd/config/ssl
	$#sudo cp /lib/systemd/system/mympd.service /etc/systemd/system/mympd.service
	$#sudo nano /etc/systemd/system/mympd.service
		#Requires=network.target local-fs.target mpd.service
		#After=mpd.service
		#Protect...
		#Restrict...
	$ sudo systemctl disable mympd
	$ sudo systemctl daemon-reload
	$ systemctl status mympd
	
	$ sudo mympd
		설정 > MPD 연결 > MPD 호스트 127.0.0.1, 음원 디렉터리 > 지정 /var/lib/mpd/music
		설정 > 외관 > 아래 > 연주 관리 > 잠시 멈춤과 정지
		KBS 클래식 FM, KBS 쿨 FM, MBC FM4U, MBC 표준 FM, SBS 파워 FM, SBS 러브 FM
		IP 주소 읽기, record_voice_over, #28a745, iptts
		웹 설정, settings, #28a745, settings
		다시 시작, refresh, #28a745, reboot
		전원 끄기, power_settings_new, #28a745, poweroff

18. ttyd

	$ wget "https://github.com/tsl0922/ttyd/releases/download/$(curl -s "https://github.com/tsl0922/ttyd/tags" | grep -m1 'releases/tag/' | cut -d\/ -f6 | cut -d\" -f1)/ttyd.armhf" -P ~/
	$ chmod +x ~/ttyd.armhf
	$ sudo mv ~/ttyd.armhf /usr/bin/ttyd
	
	$ sudo mv copy/ttyd /usr/bin/

19. Gerbera

	https://gerbera.jfrog.io/ui/native/debian/pool/main/g/gerbera/
	$ wget https://gerbera.jfrog.io/artifactory/debian/pool/main/g/gerbera/gerbera_1.12.1-bookworm1_armhf.deb
	$ sudo apt install ./gerbera_1.12.1-bookworm1_armhf.deb

	$ systemctl status gerbera
	$ sudo systemctl start gerbera
	  http://rpi_ip:49152 or 49153

20. APlayer Media Renderer

	$ wget http://albumplayer.ru/linux/aprenderer-arm32.tar.gz
	$ tar xvzf aprenderer*.tar.gz
	$ cd aprenderer
	$ ./ap2renderer

	  http://rpi_ip:7779

		Playback mode	   (O) Standard
		Preload buffer     [108788]
		Gapless mode       [ ]
		ALSA Period frames [3739]
		ALSA Buffer frames [14944]
		DSP                [original]
				   [ ] Multi-thread mode
		System		   [V] Lock memory

	$ pkill ap2renderer
	$ cd
	$ sudo mv copy/aprenderer.service /lib/systemd/system/aprenderer.service
	$ sudo systemctl daemon-reload
	$ systemctl status aprenderer
	$ sudo mkdir /dev/shm/aprenderer
	$ sudo systemctl start aprenderer
	  http://rpi_ip:7779
	$ sudo systemctl stop aprenderer

21. Build libaudiofile libFLAC

	$ sudo apt-get update
	$ sudo apt-get install libasound2-dev libflac-dev libogg-dev
	$ export CFLAGS="-O2" ; export CXXFLAGS="-O2" ; export CPPFLAGS="-O2"

	$ wget http://deb.debian.org/debian/pool/main/a/audiofile/audiofile_0.3.6.orig.tar.gz
	$ tar xvzf audiofile_0.3.6.orig.tar.gz
	$ wget http://deb.debian.org/debian/pool/main/a/audiofile/audiofile_0.3.6-5.debian.tar.xz
	$ tar xvf  audiofile_0.3.6-5.debian.tar.xz
	$ cp debian/patches/* audiofile-0.3.6/
	$ rm -rf debian/
	$ cd audiofile-0.3.6/
	$ for i in *.patch; do patch -p1 < $i; done
	$ ./configure
	$ make
	$ sudo make install
	$ ls -al /usr/local/lib/libaudiofile.so.1.0.0
	$ sudo chmod -x /usr/local/lib/libaudiofile.so.1.0.0
	$ sudo strip --strip-debug /usr/local/lib/libaudiofile.so.1.0.0
	$ ls -al /usr/local/lib/libaudiofile.so.1.0.0
	$ sudo mv /usr/lib/arm-linux-gnueabihf/libaudiofile.so.1.0.0 /usr/lib/arm-linux-gnueabihf/libaudiofile.so.1.0.0.orig
	$ sudo cp /usr/local/lib/libaudiofile.so.1.0.0 /usr/lib/arm-linux-gnueabihf/libaudiofile.so.1.0.0.sav
	$ sudo rm /usr/local/lib/libaudiofile*

	$ wget http://deb.debian.org/debian/pool/main/f/flac/flac_1.4.2+ds.orig.tar.xz
	$ tar xvf flac_1.4.2+ds.orig.tar.xz
	$ wget http://deb.debian.org/debian/pool/main/f/flac/flac_1.4.2+ds-2.debian.tar.xz
	$ tar xvf flac_1.4.2+ds-2.debian.tar.xz
	$ cp debian/patches/* flac-1.4.2/
	$ rm -rf debian/
	$ cd flac-1.4.2/
	$ for i in *.patch; do patch -p1 < $i; done
	$ ./configure
	$ make
	$ sudo make install
	$ ls -al /usr/local/lib/libFLAC.so.12.0.0
	$ sudo chmod -x /usr/local/lib/libFLAC.so.12.0.0
	$ sudo strip --strip-debug /usr/local/lib/libFLAC.so.12.0.0
	$ ls -al /usr/local/lib/libFLAC.so.12.0.0
	$ sudo mv /usr/lib/arm-linux-gnueabihf/libFLAC.so.12.0.0 /usr/lib/arm-linux-gnueabihf/libFLAC.so.12.0.0.orig
	$ sudo cp /usr/local/lib/libFLAC.so.8.3.0 /usr/lib/arm-linux-gnueabihf/libFLAC.so.12.0.0.sav
	$ sudo rm /usr/local/lib/libFLAC*

22. Tweak ALSA

	$ ls -al /usr/lib/arm-linux-gnueabihf/libasound*
	$ sudo mv /usr/lib/arm-linux-gnueabihf/libasound.so.2.0.0 /etc/libasound.so.2.0.0.orig
	$ sudo mv copy/libasound.so.2.0.0.*  /etc/
	$ sudo rm -i /usr/lib/arm-linux-gnueabihf/libasound.so*

	##ln -sf /etc/libasound.so.2.0.0.orig /usr/lib/arm-linux-gnueabihf/libasound.so
	$ sudo cp /etc/libasound.so.2.0.0.min.dev.shm /dev/shm/libasound.so.2

	$ sudo mv /usr/share/alsa /usr/share/alsa.orig
	$ sudo systemctl mask alsa-store.service
	$ sudo systemctl mask alsa-restore.service
	$ sudo nano /lib/modprobe.d/aliases.conf
		#options snd-usb-audio index=-2
	$ sudo mkdir /usr/share/alsa
	$ sudo cp /usr/share/alsa.orig/alsa.conf /usr/share/alsa/alsa.conf.orig
	$ sudo mv copy/alsa.conf.{min,mix,plug} /usr/share/alsa/

	# sed -i 's/pcm.0.card 0/pcm.0.card 1/' /usr/share/alsa/alsa.conf.{min,mix,plug}

23. Tweak decoder libraries

	$ ls -al /usr/lib/arm-linux-gnueabihf/lib{audiofile,FLAC.so}*
	$ sudo mv /usr/lib/arm-linux-gnueabihf/libaudiofile.so.1.0.0 /etc/libaudiofile.so.1.0.0.orig
	$ sudo mv /usr/lib/arm-linux-gnueabihf/libFLAC.so.12.0.0 /etc/libFLAC.so.12.0.0.orig
	$ echo "/etc/libaudiofile.so.1.0.0.sav /dev/shm/libaudiofile.so.1" | xargs -n 1 sudo cp -v copy/libaudiofile.so.1.0.0
	$ echo "/etc/libFLAC.so.12.0.0.sav /dev/shm/libFLAC.so.12" | xargs -n 1 sudo cp -v copy/libFLAC.so.12.0.0
	$ sudo rm -i /usr/lib/arm-linux-gnueabihf/lib{audiofile.so*,FLAC.so*}
	$ rm copy/{libaudiofile.so.1.0.0,libFLAC.so.12.0.0}
	$#sudo ln -sf /etc/libFLAC.so.8.3.0.sav      /usr/lib/arm-linux-gnueabi/libFLAC.so
	$#sudo ln -sf /etc/libaudiofile.so.1.0.0.sav /usr/lib/arm-linux-gnueabi/libaudiofile.so

	$ ls -al /dev/shm/
	$ echo "/dev/shm/" | sudo tee /etc/ld.so.conf.d/dev_shm.conf
	$ sudo ldconfig
	$ ls -al /usr/lib/arm-linux-gnueabihf/lib{asound.so.*,audiofile.so.*,FLAC.so.*}

24. Edit /etc/rc.local

	https://github.com/dumpsite/lan951x-led-ctl
	# sudo apt-get install libusb-1.0-0-dev

	$ mv copy/lan951x-led-ctl copy/llctl ./
	$ sudo mv copy/*.service /lib/systemd/system/
	$ sudo systemctl daemon-reload
	$ sudo nano /etc/rc.local

25. Sysctl Configuration

	$ sudo nano /etc/sysctl.conf
	$ sudo sysctl -p /etc/sysctl.conf

26. Tweak dt-blob.bin

	$ sudo mv copy/dt-blob.bin.twk /boot/firmware/

27. audio-config

	$ sudo mv copy/{audio-config,audioconf,consf} /usr/bin/
	$ sudo mv copy/audio.conf /etc/default/
	$ audio-config
	$ audioconf

28. CIFS & NFS & USB mounting

	$#sudo apt-get install cifs-utils nfs-common
	$ sudo mkdir /mnt/cifs /mnt/nfs /mnt/usb
	$ sudo ln -s /mnt/ /var/lib/mpd/music
	$ sudo nano /etc/fstab
		#PARTUUID=...
		#PARTUUID=...
		/dev/mmcblk0p1  /boot/firmware  vfat    defaults          0       2
		/dev/mmcblk0p2  /               ext4    defaults,noatime  0       1
		/dev/sda1 /mnt/usb auto defaults,nofail,x-systemd.automount,x-systemd.device-timeout=1,ro 0 2
		#//192.168.0.x/xxx /mnt/cifs cifs guest,ro,iocharset=utf8 0 0
		#//192.168.0.x/xxx /mnt/cifs cifs username=user,password=pass,ro,iocharset=utf8 0 0
		#192.168.0.x:/xxx  /mnt/nfs  nfs  ro,sync,hard,intr,iocharset=utf8 0 0

29. Disabel swap

	$ cat /proc/swaps
	$ sudo systemctl disable dphys-swapfile
	$ sudo swapoff -a
	$ sudo rm /var/swap

30. Plexdrive (Google Drive)

	https://github.com/dweidenfeld/plexdrive
	https://github.com/dweidenfeld/plexdrive/releases/latest

	$ curl -s $(curl -s https://github.com/dweidenfeld/plexdrive/releases/latest | cut -d\" -f2) | grep -m1 arm7 | cut -d\" -f2 | wget "https://github.com/$(cat -)"
	$ chomd +x plexdrive-linux-arm7
	$ sudo mv ./plexdrive-linux-arm7 /usr/bin/plexdrive
	$ sudo nano /etc/systemd/system/plexdrive.service

	[Unit]
	Description=Plexdrive
	AssertPathIsDirectory=/mnt/plexdrive
	After=network-online.target

	[Service]
	Type=simple
	ExecStart=/usr/bin/plexdrive mount -o allow_other -v 2 /mnt/plexdrive
	ExecStop=/bin/fusermount -u /mnt/plexdrive
	Restart=on-abort

	[Install]
	WantedBy=default.target
	
	$ sudo systemctl daemon-reload
	
	$ sudo mkdir /mnt/plexdrive
	$ sudo systemctl start plexdrive.service
	$ sudo systemctl enable plexdrive.service

31. Wondershaper

	https://github.com/magnific0/wondershaper
	
	$ wget https://github.com/magnific0/wondershaper/archive/master.zip
	$ unzip master.zip
	$ cd wondershaper-master
	$ sudo make install
	
	$ wget https://github.com/magnific0/wondershaper/raw/master/wondershaper
	$ chmod +x wondershaper

	$ sudo nano /etc/default/audio.conf
		wondershaper=on
	$ sudo nano /etc/rc.local
		[ "$wondershaper" = on ] && wondershaper -c -a $(ifconfig | grep -o ^[a-z0-9]* | grep -v lo)
		[ "$wondershaper" = on ] && /home/pi/wondershaper -c -a $(ifconfig | grep -o ^[a-z0-9]* | grep -v lo)

32. Make Image

	# Remove all the sound devices

	$ ls -al /usr/lib/arm-linux-gnueabi/lib{asound.so.*,audiofile.so.*,FLAC.so.*}
	$ ps -ef | grep [d]efunct | awk '{print $3}'
	$ ls -al /boot/config.txt /boot/firmware/config.txt
	$ sudo systemctl disable ssh
	$ sudo sed -i '/ssh=/s/=.*/=off/' /etc/default/audio.conf
	$ grep ssh= /etc/default/audio.conf

	$#sudo ntpdate pool.ntp.org
	$ sudo apt-get update
	$ sudo apt-get upgrade
	$ sudo apt-get dist-upgrade
	$ sudo apt-get autoremove
	$ sudo apt-get clean

	$#sudo youtube-dl --update
	$ sudo yt-dlp --update
	$ echo "* Mino's UPnP Audio Renderer for Raspberry Pi $(date +"%y.%m")" | sudo tee /etc/release
	$ cat /etc/release

	$ mpc clear
	$ ls /lib/modules/
	$ sudo rm -rf /var/roon/* /var/lib/mympd/covercache/*
	$ sudo rm -f /root/.bash_history ~/.bash_history /nohup.out; history -c
	$ sync
	$ sudo poweroff

	$ sudo fdisk -l
	$ sudo umount /dev/sdc?
	$ sudo dd bs=4M status=progress if=/dev/sdc of=raspi_audio_renderer_$(date +"%y.%m").img
	$ sync
	$ zip -dd raspi_audio_renderer_$(date +"%y.%m").zip raspi_audio_renderer_$(date +"%y.%m").img

	https://github.com/Drewsif/PiShrink
	$ wget https://raw.githubusercontent.com/Drewsif/PiShrink/master/pishrink.sh
	$ chmod +x pishrink.sh
	$ sudo mv pishrink.sh /usr/local/bin
	$ sudo pishrink.sh raspi_audio_renderer_$(date +"%y.%m").img raspi_audio_renderer_expand_$(date +"%y.%m").img
	$ zip -dd raspi_audio_renderer_expand_$(date +"%y.%m").zip raspi_audio_renderer_expand_$(date +"%y.%m").img

33. Disable Bluetooth UART for RPI3

	$ sudo systemctl disable hciuart
	$#printf "\ndtoverlay=pi3-disable-wifi\ndtoverlay=pi3-disable-bt\n" | sudo tee -a /boot/firmware/config.txt

34. Shirnk Image

	http://aoakley.com/articles/2015-10-09-resizing-sd-images.php
	https://github.com/Drewsif/PiShrink
	https://github.com/dydgns2017/raspberrypi_img_backup_script
