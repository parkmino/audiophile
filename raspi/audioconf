#!/bin/bash

renderer_name () {

 clear
 echo -ne "
 --------------------------------------------
  Change Renderer Name / 렌더러 이름 바꾸기
 --------------------------------------------


 [ \e[33m"$current_name"\e[0m ] Renderer Name / 렌더러 이름


 (\e[32mm\e[0m) Main / 주메뉴
 (\e[32mq\e[0m) Quit / 나가기

  * Input / 입력 (\e[32mname\e[0m|\e[32mm\e[0m|\e[32mq\e[0m) : "
 read i
 echo
 case $i in
  m) clear ; return ;;
  q) exit ;;
  *) consf upmpd set "$i" ;;
 esac
 return
}

until [ "$i" = "q" ] ; do

 nr=0
 [ -e /proc/asound/cards ] && id=$(grep "^ $nr" /proc/asound/cards | sed 's/.* - //')
 [ -e /proc/asound/card$nr/pcm0p/info ] && card=$(grep "^id: " /proc/asound/card$nr/pcm0p/info | cut -d' ' -f2-)
 if [ -z "$id" ]; then
  card0="N/A"
 elif [ -z "$card" ]; then
  card0="$id"
 else
  card0="$id ($card)"
 fi
 
 ip=$(hostname -I)
 if [ -z "$ip" ]; then
  ip="N/A"
 else
  ip=$(echo "$ip" | tr -d ' ')
 fi

 current_name=$(consf upmpd)

 for i in dop pcm vol sta tag; do
  eval status_$i="$(consf mpd $i)"
 done

 for i in aprenderer upmpdcli airplay naa roon spotify sqzlite minidlna; do
  eval status_$i="$(consf $i)"
 done

 clear
 echo -ne "
 -----------------------------------------
  Raspberry Pi Renderer / 라즈베리 렌더러
 -----------------------------------------
  \e[35mBuild:$(consf build) (IP:$ip) - $card0\e[0m

 (\e[32m0\e[0m) [ $([ "$status_dop"      = off ] && echo "\e[33mX\e[0m" || echo "\e[33mO\e[0m") ] MPD DoP (DSD over PCM)     (\e[32m3\e[0m) [ $([ "$status_aprenderer"  = off ] && echo "\e[33mX\e[0m" || echo "\e[33mO\e[0m") ] APrenderer
 (\e[32m1\e[0m) [ $([ "$status_vol"      = off ] && echo "\e[33mX\e[0m" || echo "\e[33mO\e[0m") ] MPD Software Volume        (\e[32m4\e[0m) [ $([ "$status_upmpdcli" = off ] && echo "\e[33mX\e[0m" || echo "\e[33mO\e[0m") ] Upmpdcli Renderer
 (\e[32m2\e[0m) [ $([ "$status_sta"      = off ] && echo "\e[33mX\e[0m" || echo "\e[33mO\e[0m") ] MPD State File             (\e[32m5\e[0m) [ $([ "$status_minidlna"  = off ] && echo "\e[33mX\e[0m" || echo "\e[33mO\e[0m") ] Minidlna Media Server

 (\e[32m6\e[0m) [ $([ "$status_airplay"  = off ] && echo "\e[33mX\e[0m" || echo "\e[33mO\e[0m") ] Airplay
 (\e[32m7\e[0m) [ $([ "$status_naa"      = off ] && echo "\e[33mX\e[0m" || echo "\e[33mO\e[0m") ] NAA
 (\e[32m8\e[0m) [ $([ "$status_roon"     = off ] && echo "\e[33mX\e[0m" || echo "\e[33mO\e[0m") ] Roon Bridge
 (\e[32m9\e[0m) [ $([ "$status_spotify"  = off ] && echo "\e[33mX\e[0m" || echo "\e[33mO\e[0m") ] Spotify
 (\e[32ma\e[0m) [ $([ "$status_sqzlite"  = off ] && echo "\e[33mX\e[0m" || echo "\e[33mO\e[0m") ] Squeezebox

 (\e[32mn\e[0m) [ \e[33m"$current_name"\e[0m ] Renderer Name / 렌더러 이름 >>

 (\e[32mu\e[0m) Update Roon Bridge / 룬 브리지 업데이트
 (\e[32ms\e[0m) Bash               / 쉘 명령어
 (\e[32mq\e[0m) Quit               / 나가기
 (\e[32mr\e[0m) Reboot             / 재시작하여 적용

  *  Select / 선택 (\e[32m0-9\e[0m|\e[32ma\e[0m|\e[32mn\e[0m|\e[32mu\e[0m|\e[32ms\e[0m|\e[32mq\e[0m|\e[32mr\e[0m) : "
 read i
 echo
 case $i in
  0) [ $status_dop        = off ] && consf mpd dop    on || consf mpd dop    off ;;
# 1) [ $status_pcm        = off ] && consf mpd pcm    on || consf mpd pcm    off ;;
  1) [ $status_vol        = off ] && consf mpd vol    on || consf mpd vol    off ;;
  2) [ $status_sta        = off ] && consf mpd sta    on || consf mpd sta    off ;;
# 2) [ $status_tag        = off ] && consf mpd tag    on || consf mpd tag    off ;;
  3) [ $status_aprenderer = off ] && consf aprenderer on || consf aprenderer off ;;
  4) [ $status_upmpdcli   = off ] && consf upmpdcli   on || consf upmpdcli   off ;;
  5) [ $status_minidlna   = off ] && consf minidlna   on || consf minidlna   off ;;
  6) [ $status_airplay    = off ] && consf airplay    on || consf airplay    off ;;
  7) [ $status_naa        = off ] && consf naa        on || consf naa        off ;;
  8) [ $status_roon       = off ] && consf roon       on || consf roon       off ;;
  9) [ $status_spotify    = off ] && consf spotify    on || consf spotify    off ;;
  a) [ $status_sqzlite    = off ] && consf sqzlite    on || consf sqzlite    off ;;
  n) renderer_name	;;
  u) roonup		;;
  s) bash		;;
  q) exit		;;
  r) sudo reboot	;;
  *) clear		;;
 esac
done
